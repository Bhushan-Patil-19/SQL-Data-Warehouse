/*
====================================================================================================
Stored Procedure: Load Silver layer
====================================================================================================
Script Purpose:
    This stored procedure loads data into silver layer tables from bronze layer.
    It performes following functions:
    -Truncate the bronze layer tables before loading the data
    -Clean the data come from bronze layer and store it in silver layer
    -Uses the BULK INSERT command to load data from csv files to bronze tables.

Usage Example:
  EXEC silver.load_silver
=====================================================================================================
*/

CREATE OR ALTER PROCEDURE silver.load_silver AS
BEGIN
	
	BEGIN TRY
		DECLARE @start_time	DATETIME, @end_time DATETIME;

		PRINT '               ==============';
		PRINT '     TRUNCATING AND LOADING SILVER LAYER';
		PRINT '               ==============';

		PRINT '               --------------';
		PRINT '             LOADING CRM TABLES';
		PRINT '               --------------';
		PRINT '                             ';
		PRINT '>>TRUNCATING AND ADDING DATA IN TABLE : silver.crm_cust_info<<';

		SET @start_time = getdate();
		TRUNCATE TABLE silver.crm_cust_info; -- Removes all rows before loading new data

		INSERT INTO silver.crm_cust_info
		(
		cst_id,
		cst_key,
		cst_firstname,
		cst_lastname,
		cst_marital_status,
		cst_gndr,
		cst_create_date
		)
		SELECT TOP 1 WITH TIES
			cst_id,
			cst_key,
			TRIM(cst_firstname) AS cst_firstname,
			TRIM(cst_lastname) AS cst_lastname,
			CASE WHEN UPPER (TRIM(cst_marital_status)) = 'S' THEN 'Single'
				 WHEN UPPER (TRIM(cst_marital_status)) = 'M' THEN 'Married'
				 ELSE 'Unknown'
			END cst_marital_status,
			CASE WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
				 WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
				 ELSE 'Unknown'
			END cst_gndr,
			cst_create_date
		FROM bronze.crm_cust_info
		ORDER BY ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC);
		SET @end_time = getdate();
		PRINT '>> LOAD DURATION: ' + CAST (DATEDIFF(SECOND,@start_time,@end_time) AS VARCHAR) + ' SENCONDS';
		PRINT '     ----------'

----------------------------------------------------------------------------------------------------------------------------------------------------

		PRINT '                             ';
		PRINT '>>TRUNCATING AND ADDING DATA IN TABLE : bronze.crm_sales_details<<';
		SET @start_time = getdate();
		
		TRUNCATE TABLE silver.crm_sales_details;

		INSERT INTO	silver.crm_sales_details
		(
			sls_ord_num,
			sls_prd_key,
			sls_cust_id,
			sls_order_dt,
			sls_ship_dt,
			sls_due_dt,
			sls_sales,
			sls_quantity,
			sls_price
		)

		SELECT 
			sls_ord_num,

			sls_prd_key,

			sls_cust_id,

			CASE WHEN sls_order_dt = 0 THEN NULL
				 WHEN LEN(sls_order_dt) != 8 THEN NULL
				 ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
			END sls_order_dt,

			CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE) sls_ship_dt,

			CAST(CAST(sls_due_dt AS VARCHAR) AS DATE) sls_due_dt,

			CASE WHEN sls_sales <=0 OR sls_sales IS NULL OR sls_sales != sls_quantity * ABS(sls_price) 
				 THEN sls_quantity * ABS(sls_price)
				 ELSE sls_sales
			END sls_sales,

			sls_quantity,

			CASE WHEN sls_price <= 0 OR sls_price IS NULL
				 THEN ABS(sls_sales) / NULLIF(sls_quantity,0)
				 ELSE sls_price
			END sls_price

		FROM bronze.crm_sales_details;
		SET @end_time = getdate();
		PRINT '>> LOAD DURATION: ' + CAST (DATEDIFF(SECOND,@start_time,@end_time) AS VARCHAR) + ' SENCONDS';
		PRINT '     ----------'
---------------------------------------------------------------------------------------------------------------------------------

		PRINT '                             ';
		PRINT '>>TRUNCATING AND ADDING DATA IN TABLE : silver.crm_prd_info<<';

		SET @start_time = getdate();

		TRUNCATE TABLE silver.crm_prd_info;

		INSERT INTO silver.crm_prd_info 
		(
			prd_id,
			cat_id,
			prd_key,
			prd_nm,
			prd_cost,
			prd_line,
			prd_start_dt,
			prd_end_dt
		)

		SELECT 
			prd_id,
			REPLACE (SUBSTRING (prd_key,1,5), '-', '_') as cat_id, --first 5 charecters in prd_key are sub catagary ID
			SUBSTRING (prd_key,7,len(prd_key))as prd_key,
			prd_nm,
			ISNULL(prd_cost, 0) prd_cost,
			CASE UPPER (TRIM (prd_line))
				WHEN 'M' THEN 'Mountain'
				WHEN 'S' THEN 'Other Sales'
				WHEN 'R' THEN 'Road'
				WHEN 'T' THEN 'Touring'
				ELSE 'Unknown'
			END AS prd_line,
			CAST (prd_start_dt AS DATE)	prd_start_dt,
			DATEADD (DAY,-1, (CAST (LEAD (prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt) AS DATE))) AS prd_end_dt
		FROM bronze.crm_prd_info;
		SET @end_time = getdate();
		PRINT '>> LOAD DURATION: ' + CAST (DATEDIFF(SECOND,@start_time,@end_time) AS VARCHAR) + ' SENCONDS';
		PRINT '     ----------'
------------------------------------------------------------------------------------------------------------------------------

		PRINT '                             ';
		PRINT '               --------------';
		PRINT '             LOADING ERP TABLES';
		PRINT '               --------------';
		PRINT '>>TRUNCATING AND ADDING DATA IN TABLE : silver.erp_cust_az12<<';

		SET @start_time = getdate();
		
		TRUNCATE TABLE silver.erp_cust_az12;

		INSERT INTO silver.erp_cust_az12
		(
			cid,
			bdate,
			gen
		)

		SELECT 
			SUBSTRING(cid, LEN(cid)-9, LEN(cid)) cid,
			bdate,
			CASE WHEN UPPER(TRIM(gen)) IN  ('M','MALE') THEN 'Male'
				 WHEN UPPER(TRIM(gen)) IN ('F','FEMALE')THEN 'Female'
				 ELSE 'Unknown'
			END gen
		FROM bronze.erp_cust_az12;
		SET @end_time = getdate();
		PRINT '>> LOAD DURATION: ' + CAST (DATEDIFF(SECOND,@start_time,@end_time) AS VARCHAR) + ' SENCONDS';
		PRINT '     ----------'

-------------------------------------------------------------------------------------------------------------------------------------

		PRINT '                             ';
		PRINT '>>TRUNCATING AND ADDING DATA IN TABLE : bronze.erp_loc_a101<<';

		SET @start_time = getdate();
		TRUNCATE TABLE silver.erp_loc_a101;

		INSERT INTO	silver.erp_loc_a101
			(
			cid,
			cntry
			)
		SELECT
		REPLACE(cid, '-', '') AS cid,
		CASE WHEN UPPER(TRIM(cntry)) IN ('US', 'USA') THEN 'United States'
			 WHEN TRIM(cntry) = '' OR cntry IS NULL THEN 'Unknown'
			 WHEN TRIM(cntry) = 'DE' THEN 'Germany'
			 ELSE CNTRY
		END cntry
		FROM bronze.erp_loc_a101;
		SET @end_time = getdate();
		PRINT '>> LOAD DURATION: ' + CAST (DATEDIFF(SECOND,@start_time,@end_time) AS VARCHAR) + ' SENCONDS';
		PRINT '     ----------'

-------------------------------------------------------------------------------------------------------------------------------------------------------



		PRINT '                             ';
		PRINT '>>TRUNCATING AND ADDING DATA IN TABLE : silver.erp_px_cat_g1v2<<';

		SET @start_time = getdate();
		
		TRUNCATE TABLE silver.erp_px_cat_g1v2;

		INSERT INTO silver.erp_px_cat_g1v2
			(
			id,
			cat,
			subcat,
			maintenance	
			)
		SELECT
			id,
			cat,
			subcat,
			maintenance
		FROM bronze.erp_px_cat_g1v2;
		SET @end_time = getdate();
		PRINT '>> LOAD DURATION: ' + CAST (DATEDIFF(SECOND,@start_time,@end_time) AS VARCHAR) + ' SENCONDS';
		PRINT '     ----------'
--------------------------------------------------------------------------------------------------------------------------------------------------------
	END TRY

	BEGIN CATCH
		PRINT '=====================================';
		PRINT 'ERROR OCCURED DURING LOADING BRONZE LAYER';
		PRINT 'ERROR MESSEGE ' + ERROR_MESSAGE();
		PRINT 'ERROR MESSEGE ' + CAST (ERROR_NUMBER() AS VARCHAR);
		PRINT 'ERROR MESSEGE ' + CAST (ERROR_STATE() AS VARCHAR);
		PRINT '=====================================';
	END CATCH
END
